{"ast":null,"code":"export const isEmail = value => /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g.test(value);\nexport const payloadCreator = asyncFunc => async (arg, thunkAPI) => {\n  try {\n    const res = await asyncFunc(arg);\n    return res;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n};\nexport const generateNameId = _ref => {\n  let {\n    name,\n    _id\n  } = _ref;\n  return encodeURI(`${name.replace(/\\s/g, '-').replace(/'%'/g, '')}-i.${_id}`);\n};\nexport const formatMoney = value => String(value).replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.');\nexport const formatSold = value => {\n  const price = Number((Number(value) / 1000).toFixed(2));\n\n  if (price > 1) {\n    return price + 'k';\n  }\n\n  return value;\n};\nexport const getProductId = id => {\n  const arr = id.split('-i.');\n  return arr[arr.length - 1];\n};\nexport const percentSale = (origin, sale) => {\n  return (origin - sale) / 100 * 100;\n};","map":{"version":3,"sources":["F:/ReactJS/React-Project/shopee/src/utils/helper.js"],"names":["isEmail","value","test","payloadCreator","asyncFunc","arg","thunkAPI","res","error","rejectWithValue","generateNameId","name","_id","encodeURI","replace","formatMoney","String","formatSold","price","Number","toFixed","getProductId","id","arr","split","length","percentSale","origin","sale"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAGC,KAAK,IAAI,mCAAmCC,IAAnC,CAAwCD,KAAxC,CAAzB;AACP,OAAO,MAAME,cAAc,GAAGC,SAAS,IAAI,OAAOC,GAAP,EAAYC,QAAZ,KAAyB;AAClE,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMH,SAAS,CAACC,GAAD,CAA3B;AACA,WAAOE,GAAP;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,WAAOF,QAAQ,CAACG,eAAT,CAAyBD,KAAzB,CAAP;AACD;AACF,CAPM;AASP,OAAO,MAAME,cAAc,GAAG;AAAA,MAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD;AAAA,SAC5BC,SAAS,CAAE,GAAEF,IAAI,CAACG,OAAL,CAAa,KAAb,EAAoB,GAApB,EAAyBA,OAAzB,CAAiC,MAAjC,EAAyC,EAAzC,CAA6C,MAAKF,GAAI,EAA1D,CADmB;AAAA,CAAvB;AAGP,OAAO,MAAMG,WAAW,GAAGd,KAAK,IAC9Be,MAAM,CAACf,KAAD,CAAN,CAAca,OAAd,CAAsB,uBAAtB,EAA+C,GAA/C,CADK;AAGP,OAAO,MAAMG,UAAU,GAAGhB,KAAK,IAAI;AACjC,QAAMiB,KAAK,GAAGC,MAAM,CAAC,CAACA,MAAM,CAAClB,KAAD,CAAN,GAAgB,IAAjB,EAAuBmB,OAAvB,CAA+B,CAA/B,CAAD,CAApB;;AACA,MAAIF,KAAK,GAAG,CAAZ,EAAe;AACb,WAAOA,KAAK,GAAG,GAAf;AACD;;AACD,SAAOjB,KAAP;AACD,CANM;AAQP,OAAO,MAAMoB,YAAY,GAAGC,EAAE,IAAI;AAChC,QAAMC,GAAG,GAAGD,EAAE,CAACE,KAAH,CAAS,KAAT,CAAZ;AACA,SAAOD,GAAG,CAACA,GAAG,CAACE,MAAJ,GAAa,CAAd,CAAV;AACD,CAHM;AAKP,OAAO,MAAMC,WAAW,GAAG,CAACC,MAAD,EAASC,IAAT,KAAkB;AAC3C,SAAQ,CAACD,MAAM,GAAGC,IAAV,IAAkB,GAAnB,GAA0B,GAAjC;AACD,CAFM","sourcesContent":["export const isEmail = value => /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g.test(value)\r\nexport const payloadCreator = asyncFunc => async (arg, thunkAPI) => {\r\n  try {\r\n    const res = await asyncFunc(arg)\r\n    return res\r\n  } catch (error) {\r\n    return thunkAPI.rejectWithValue(error)\r\n  }\r\n}\r\n\r\nexport const generateNameId = ({ name, _id }) =>\r\n  encodeURI(`${name.replace(/\\s/g, '-').replace(/'%'/g, '')}-i.${_id}`)\r\n\r\nexport const formatMoney = value =>\r\n  String(value).replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.')\r\n\r\nexport const formatSold = value => {\r\n  const price = Number((Number(value) / 1000).toFixed(2))\r\n  if (price > 1) {\r\n    return price + 'k'\r\n  }\r\n  return value\r\n}\r\n\r\nexport const getProductId = id => {\r\n  const arr = id.split('-i.')\r\n  return arr[arr.length - 1]\r\n}\r\n\r\nexport const percentSale = (origin, sale) => {\r\n  return ((origin - sale) / 100) * 100\r\n}\r\n"]},"metadata":{},"sourceType":"module"}