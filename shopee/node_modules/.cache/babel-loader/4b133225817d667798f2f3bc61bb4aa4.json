{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport authAPI from 'src/api/auth.api';\nimport LocalStorage from 'src/constants/localStorage';\nimport { payloadCreator } from 'src/utils/helper';\nexport const register = createAsyncThunk('auth/register', payloadCreator(authAPI.register));\nexport const login = createAsyncThunk('auth/login', payloadCreator(authAPI.login));\n\nconst handleAuthFulfilled = (state, action) => {\n  const {\n    access_token,\n    user\n  } = action.payload.data;\n  state.profile = user;\n  localStorage.setItem(localStorage.user, JSON.stringify(user));\n  localStorage.setItem(localStorage.accessToken, JSON.stringify(access_token));\n};\n\nconst auth = createSlice({\n  name: 'auth',\n  initialState: {\n    profile: localStorage.getItem(LocalStorage.user) || {}\n  },\n  extraReducers: {\n    [register.fulfilled]: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.profile = payload.data;\n      localStorage.setItem(LocalStorage.user, JSON.stringify(state.profile));\n    },\n    [login.fulfilled]: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      state.profile = payload.data;\n      localStorage.setItem(LocalStorage.user, JSON.stringify(state.profile));\n    }\n  }\n});\nconst authReducer = auth.reducer;\nexport default authReducer;","map":{"version":3,"sources":["F:/ReactJS/React-Project/shopee/src/pages/Auth/auth.slice.js"],"names":["createAsyncThunk","createSlice","authAPI","LocalStorage","payloadCreator","register","login","handleAuthFulfilled","state","action","access_token","user","payload","data","profile","localStorage","setItem","JSON","stringify","accessToken","auth","name","initialState","getItem","extraReducers","fulfilled","authReducer","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,OAAO,MAAMC,QAAQ,GAAGL,gBAAgB,CACtC,eADsC,EAEtCI,cAAc,CAACF,OAAO,CAACG,QAAT,CAFwB,CAAjC;AAKP,OAAO,MAAMC,KAAK,GAAGN,gBAAgB,CACnC,YADmC,EAEnCI,cAAc,CAACF,OAAO,CAACI,KAAT,CAFqB,CAA9B;;AAKP,MAAMC,mBAAmB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC7C,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAyBF,MAAM,CAACG,OAAP,CAAeC,IAA9C;AACAL,EAAAA,KAAK,CAACM,OAAN,GAAgBH,IAAhB;AACAI,EAAAA,YAAY,CAACC,OAAb,CAAqBD,YAAY,CAACJ,IAAlC,EAAwCM,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAxC;AACAI,EAAAA,YAAY,CAACC,OAAb,CAAqBD,YAAY,CAACI,WAAlC,EAA+CF,IAAI,CAACC,SAAL,CAAeR,YAAf,CAA/C;AACD,CALD;;AAOA,MAAMU,IAAI,GAAGnB,WAAW,CAAC;AACvBoB,EAAAA,IAAI,EAAE,MADiB;AAEvBC,EAAAA,YAAY,EAAE;AACZR,IAAAA,OAAO,EAAEC,YAAY,CAACQ,OAAb,CAAqBpB,YAAY,CAACQ,IAAlC,KAA2C;AADxC,GAFS;AAKvBa,EAAAA,aAAa,EAAE;AACb,KAACnB,QAAQ,CAACoB,SAAV,GAAsB,CAACjB,KAAD,WAAwB;AAAA,UAAhB;AAAEI,QAAAA;AAAF,OAAgB;AAC5CJ,MAAAA,KAAK,CAACM,OAAN,GAAgBF,OAAO,CAACC,IAAxB;AACAE,MAAAA,YAAY,CAACC,OAAb,CAAqBb,YAAY,CAACQ,IAAlC,EAAwCM,IAAI,CAACC,SAAL,CAAeV,KAAK,CAACM,OAArB,CAAxC;AACD,KAJY;AAKb,KAACR,KAAK,CAACmB,SAAP,GAAmB,CAACjB,KAAD,YAAwB;AAAA,UAAhB;AAAEI,QAAAA;AAAF,OAAgB;AACzCJ,MAAAA,KAAK,CAACM,OAAN,GAAgBF,OAAO,CAACC,IAAxB;AACAE,MAAAA,YAAY,CAACC,OAAb,CAAqBb,YAAY,CAACQ,IAAlC,EAAwCM,IAAI,CAACC,SAAL,CAAeV,KAAK,CAACM,OAArB,CAAxC;AACD;AARY;AALQ,CAAD,CAAxB;AAiBA,MAAMY,WAAW,GAAGN,IAAI,CAACO,OAAzB;AAEA,eAAeD,WAAf","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport authAPI from 'src/api/auth.api'\r\nimport LocalStorage from 'src/constants/localStorage'\r\nimport { payloadCreator } from 'src/utils/helper'\r\n\r\nexport const register = createAsyncThunk(\r\n  'auth/register',\r\n  payloadCreator(authAPI.register)\r\n)\r\n\r\nexport const login = createAsyncThunk(\r\n  'auth/login',\r\n  payloadCreator(authAPI.login)\r\n)\r\n\r\nconst handleAuthFulfilled = (state, action) => {\r\n  const { access_token, user } = action.payload.data\r\n  state.profile = user\r\n  localStorage.setItem(localStorage.user, JSON.stringify(user))\r\n  localStorage.setItem(localStorage.accessToken, JSON.stringify(access_token))\r\n}\r\n\r\nconst auth = createSlice({\r\n  name: 'auth',\r\n  initialState: {\r\n    profile: localStorage.getItem(LocalStorage.user) || {}\r\n  },\r\n  extraReducers: {\r\n    [register.fulfilled]: (state, { payload }) => {\r\n      state.profile = payload.data\r\n      localStorage.setItem(LocalStorage.user, JSON.stringify(state.profile))\r\n    },\r\n    [login.fulfilled]: (state, { payload }) => {\r\n      state.profile = payload.data\r\n      localStorage.setItem(LocalStorage.user, JSON.stringify(state.profile))\r\n    }\r\n  }\r\n})\r\n\r\nconst authReducer = auth.reducer\r\n\r\nexport default authReducer\r\n"]},"metadata":{},"sourceType":"module"}