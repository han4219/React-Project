{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { path } from 'src/constants/path';\nimport { unauthorize } from 'src/pages/Auth/auth.slice';\nexport default function Authorization() {\n  _s();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const status = useSelector(state => state.app.status);\n  useEffect(() => {\n    if (status === 401) {\n      dispatch(unauthorize());\n      navigate(path.login);\n    }\n  }, [dispatch, navigate, status]);\n  return null;\n}\n\n_s(Authorization, \"RJQ4fkY77scfUg1NF05mtkAvAhg=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n\n_c = Authorization;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authorization\");","map":{"version":3,"sources":["F:/ReactJS/React-Project/shopee/src/components/Authorization/Authorization.jsx"],"names":["useEffect","useSelector","useDispatch","useNavigate","path","unauthorize","Authorization","dispatch","navigate","status","state","app","login"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACtC,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,MAAM,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,GAAN,CAAUF,MAApB,CAA1B;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,MAAM,KAAK,GAAf,EAAoB;AAClBF,MAAAA,QAAQ,CAACF,WAAW,EAAZ,CAAR;AACAG,MAAAA,QAAQ,CAACJ,IAAI,CAACQ,KAAN,CAAR;AACD;AACF,GALQ,EAKN,CAACL,QAAD,EAAWC,QAAX,EAAqBC,MAArB,CALM,CAAT;AAOA,SAAO,IAAP;AACD;;GAbuBH,a;UACLJ,W,EACAC,W,EACFF,W;;;KAHOK,a","sourcesContent":["import { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { path } from 'src/constants/path'\r\nimport { unauthorize } from 'src/pages/Auth/auth.slice'\r\n\r\nexport default function Authorization() {\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n  const status = useSelector(state => state.app.status)\r\n\r\n  useEffect(() => {\r\n    if (status === 401) {\r\n      dispatch(unauthorize())\r\n      navigate(path.login)\r\n    }\r\n  }, [dispatch, navigate, status])\r\n\r\n  return null\r\n}\r\n"]},"metadata":{},"sourceType":"module"}