{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport authAPI from 'src/api/auth.api';\nimport LocalStorage from 'src/constants/localStorage';\nexport const register = createAsyncThunk('auth/register', async (data, thunkAPI) => {\n  try {\n    const res = await authAPI.register(data);\n    return res.data;\n  } catch (err) {\n    return thunkAPI.rejectWithValue(err);\n  }\n});\nconst auth = createSlice({\n  name: 'auth',\n  initialState: {\n    profile: localStorage.getItem(LocalStorage.user) || {}\n  },\n  extraReducers: {\n    [register.fulfilled]: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.profile = payload;\n      localStorage.setItem(LocalStorage.user, JSON.stringify(state.profile));\n    }\n  }\n});\nconst authReducer = auth.reducer;\nexport default authReducer;","map":{"version":3,"sources":["F:/ReactJS/React-Project/shopee/src/pages/Auth/auth.slice.js"],"names":["createAsyncThunk","createSlice","authAPI","LocalStorage","register","data","thunkAPI","res","err","rejectWithValue","auth","name","initialState","profile","localStorage","getItem","user","extraReducers","fulfilled","state","payload","setItem","JSON","stringify","authReducer","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAEA,OAAO,MAAMC,QAAQ,GAAGJ,gBAAgB,CACtC,eADsC,EAEtC,OAAOK,IAAP,EAAaC,QAAb,KAA0B;AACxB,MAAI;AACF,UAAMC,GAAG,GAAG,MAAML,OAAO,CAACE,QAAR,CAAiBC,IAAjB,CAAlB;AACA,WAAOE,GAAG,CAACF,IAAX;AACD,GAHD,CAGE,OAAOG,GAAP,EAAY;AACZ,WAAOF,QAAQ,CAACG,eAAT,CAAyBD,GAAzB,CAAP;AACD;AACF,CATqC,CAAjC;AAYP,MAAME,IAAI,GAAGT,WAAW,CAAC;AACvBU,EAAAA,IAAI,EAAE,MADiB;AAEvBC,EAAAA,YAAY,EAAE;AACZC,IAAAA,OAAO,EAAEC,YAAY,CAACC,OAAb,CAAqBZ,YAAY,CAACa,IAAlC,KAA2C;AADxC,GAFS;AAKvBC,EAAAA,aAAa,EAAE;AACb,KAACb,QAAQ,CAACc,SAAV,GAAsB,CAACC,KAAD,WAAwB;AAAA,UAAhB;AAAEC,QAAAA;AAAF,OAAgB;AAC5CD,MAAAA,KAAK,CAACN,OAAN,GAAgBO,OAAhB;AACAN,MAAAA,YAAY,CAACO,OAAb,CAAqBlB,YAAY,CAACa,IAAlC,EAAwCM,IAAI,CAACC,SAAL,CAAeJ,KAAK,CAACN,OAArB,CAAxC;AACD;AAJY;AALQ,CAAD,CAAxB;AAaA,MAAMW,WAAW,GAAGd,IAAI,CAACe,OAAzB;AAEA,eAAeD,WAAf","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport authAPI from 'src/api/auth.api'\r\nimport LocalStorage from 'src/constants/localStorage'\r\n\r\nexport const register = createAsyncThunk(\r\n  'auth/register',\r\n  async (data, thunkAPI) => {\r\n    try {\r\n      const res = await authAPI.register(data)\r\n      return res.data\r\n    } catch (err) {\r\n      return thunkAPI.rejectWithValue(err)\r\n    }\r\n  }\r\n)\r\n\r\nconst auth = createSlice({\r\n  name: 'auth',\r\n  initialState: {\r\n    profile: localStorage.getItem(LocalStorage.user) || {}\r\n  },\r\n  extraReducers: {\r\n    [register.fulfilled]: (state, { payload }) => {\r\n      state.profile = payload\r\n      localStorage.setItem(LocalStorage.user, JSON.stringify(state.profile))\r\n    }\r\n  }\r\n})\r\n\r\nconst authReducer = auth.reducer\r\n\r\nexport default authReducer\r\n"]},"metadata":{},"sourceType":"module"}