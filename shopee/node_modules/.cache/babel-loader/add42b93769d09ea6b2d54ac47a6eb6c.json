{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport authAPI from 'src/api/auth.api';\nimport LocalStorage from 'src/constants/localStorage';\nimport { payloadCreator } from 'src/utils/helper';\nexport const register = createAsyncThunk('auth/register', payloadCreator(authAPI.register));\nexport const login = createAsyncThunk('auth/login', payloadCreator(authAPI.login));\nexport const logout = createAsyncThunk('auth/logout', payloadCreator(authAPI.logout));\n\nconst handleAuthFulfilled = (state, action) => {\n  const {\n    access_token,\n    user\n  } = action.payload.data;\n  state.profile = user;\n  localStorage.setItem(LocalStorage.user, JSON.stringify(state.profile));\n  localStorage.setItem(LocalStorage.accessToken, JSON.stringify(access_token));\n};\n\nconst auth = createSlice({\n  name: 'auth',\n  initialState: {\n    profile: JSON.parse(localStorage.getItem(LocalStorage.user)) || {}\n  },\n  reducers: {\n    removeOnLogout: state => {\n      window.localStorage.clear();\n      state.profile = {};\n    }\n  },\n  extraReducers: {\n    [register.fulfilled]: handleAuthFulfilled,\n    [login.fulfilled]: handleAuthFulfilled,\n    [logout.fulfilled]: state => {\n      state.profile = {};\n      localStorage.removeItem(LocalStorage.user);\n      localStorage.removeItem(LocalStorage.accessToken);\n    }\n  }\n});\nconst authReducer = auth.reducer; // export const { removeOnLogout } = auth.actions -> sử dụng để logout mà ko dùng api\n\nexport default authReducer;","map":{"version":3,"sources":["F:/ReactJS/React-Project/shopee/src/pages/Auth/auth.slice.js"],"names":["createAsyncThunk","createSlice","authAPI","LocalStorage","payloadCreator","register","login","logout","handleAuthFulfilled","state","action","access_token","user","payload","data","profile","localStorage","setItem","JSON","stringify","accessToken","auth","name","initialState","parse","getItem","reducers","removeOnLogout","window","clear","extraReducers","fulfilled","removeItem","authReducer","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,OAAO,MAAMC,QAAQ,GAAGL,gBAAgB,CACtC,eADsC,EAEtCI,cAAc,CAACF,OAAO,CAACG,QAAT,CAFwB,CAAjC;AAKP,OAAO,MAAMC,KAAK,GAAGN,gBAAgB,CACnC,YADmC,EAEnCI,cAAc,CAACF,OAAO,CAACI,KAAT,CAFqB,CAA9B;AAKP,OAAO,MAAMC,MAAM,GAAGP,gBAAgB,CACpC,aADoC,EAEpCI,cAAc,CAACF,OAAO,CAACK,MAAT,CAFsB,CAA/B;;AAKP,MAAMC,mBAAmB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC7C,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAyBF,MAAM,CAACG,OAAP,CAAeC,IAA9C;AACAL,EAAAA,KAAK,CAACM,OAAN,GAAgBH,IAAhB;AACAI,EAAAA,YAAY,CAACC,OAAb,CAAqBd,YAAY,CAACS,IAAlC,EAAwCM,IAAI,CAACC,SAAL,CAAeV,KAAK,CAACM,OAArB,CAAxC;AACAC,EAAAA,YAAY,CAACC,OAAb,CAAqBd,YAAY,CAACiB,WAAlC,EAA+CF,IAAI,CAACC,SAAL,CAAeR,YAAf,CAA/C;AACD,CALD;;AAOA,MAAMU,IAAI,GAAGpB,WAAW,CAAC;AACvBqB,EAAAA,IAAI,EAAE,MADiB;AAEvBC,EAAAA,YAAY,EAAE;AACZR,IAAAA,OAAO,EAAEG,IAAI,CAACM,KAAL,CAAWR,YAAY,CAACS,OAAb,CAAqBtB,YAAY,CAACS,IAAlC,CAAX,KAAuD;AADpD,GAFS;AAKvBc,EAAAA,QAAQ,EAAE;AACRC,IAAAA,cAAc,EAAElB,KAAK,IAAI;AACvBmB,MAAAA,MAAM,CAACZ,YAAP,CAAoBa,KAApB;AACApB,MAAAA,KAAK,CAACM,OAAN,GAAgB,EAAhB;AACD;AAJO,GALa;AAWvBe,EAAAA,aAAa,EAAE;AACb,KAACzB,QAAQ,CAAC0B,SAAV,GAAsBvB,mBADT;AAEb,KAACF,KAAK,CAACyB,SAAP,GAAmBvB,mBAFN;AAGb,KAACD,MAAM,CAACwB,SAAR,GAAoBtB,KAAK,IAAI;AAC3BA,MAAAA,KAAK,CAACM,OAAN,GAAgB,EAAhB;AACAC,MAAAA,YAAY,CAACgB,UAAb,CAAwB7B,YAAY,CAACS,IAArC;AACAI,MAAAA,YAAY,CAACgB,UAAb,CAAwB7B,YAAY,CAACiB,WAArC;AACD;AAPY;AAXQ,CAAD,CAAxB;AAsBA,MAAMa,WAAW,GAAGZ,IAAI,CAACa,OAAzB,C,CACA;;AACA,eAAeD,WAAf","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport authAPI from 'src/api/auth.api'\r\nimport LocalStorage from 'src/constants/localStorage'\r\nimport { payloadCreator } from 'src/utils/helper'\r\n\r\nexport const register = createAsyncThunk(\r\n  'auth/register',\r\n  payloadCreator(authAPI.register)\r\n)\r\n\r\nexport const login = createAsyncThunk(\r\n  'auth/login',\r\n  payloadCreator(authAPI.login)\r\n)\r\n\r\nexport const logout = createAsyncThunk(\r\n  'auth/logout',\r\n  payloadCreator(authAPI.logout)\r\n)\r\n\r\nconst handleAuthFulfilled = (state, action) => {\r\n  const { access_token, user } = action.payload.data\r\n  state.profile = user\r\n  localStorage.setItem(LocalStorage.user, JSON.stringify(state.profile))\r\n  localStorage.setItem(LocalStorage.accessToken, JSON.stringify(access_token))\r\n}\r\n\r\nconst auth = createSlice({\r\n  name: 'auth',\r\n  initialState: {\r\n    profile: JSON.parse(localStorage.getItem(LocalStorage.user)) || {}\r\n  },\r\n  reducers: {\r\n    removeOnLogout: state => {\r\n      window.localStorage.clear()\r\n      state.profile = {}\r\n    }\r\n  },\r\n  extraReducers: {\r\n    [register.fulfilled]: handleAuthFulfilled,\r\n    [login.fulfilled]: handleAuthFulfilled,\r\n    [logout.fulfilled]: state => {\r\n      state.profile = {}\r\n      localStorage.removeItem(LocalStorage.user)\r\n      localStorage.removeItem(LocalStorage.accessToken)\r\n    }\r\n  }\r\n})\r\n\r\nconst authReducer = auth.reducer\r\n// export const { removeOnLogout } = auth.actions -> sử dụng để logout mà ko dùng api\r\nexport default authReducer\r\n"]},"metadata":{},"sourceType":"module"}