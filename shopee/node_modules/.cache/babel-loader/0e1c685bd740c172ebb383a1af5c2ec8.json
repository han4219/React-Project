{"ast":null,"code":"import axios from 'axios';\nimport { toast } from 'react-toastify';\nimport LocalStorage from 'src/constants/localStorage';\n\nclass Http {\n  constructor() {\n    this.instance = axios.create({\n      baseURL: process.env.REACT_APP_API,\n      timeout: 10000,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    this.instance.interceptors.response.use(response => {\n      const result = { ...response.data,\n        status: response.status\n      };\n      return result;\n    }, _ref => {\n      let {\n        response\n      } = _ref;\n      toast.error('Bạn chưa đăng nhập!', {\n        position: 'top-center',\n        autoClose: 3000\n      });\n      const result = { ...response.data,\n        status: response.status\n      };\n      return Promise.reject(result);\n    });\n    this.instance.interceptors.request.use(config => {\n      const accessToken = localStorage.getItem(LocalStorage.accessToken);\n\n      if (accessToken) {\n        config.headers.authorization = accessToken;\n      }\n\n      return config;\n    }, error => {\n      return Promise.reject(error.response);\n    });\n  }\n\n  get(url) {\n    let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return this.instance.get(url, config);\n  }\n\n  post(url, data) {\n    let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    return this.instance.post(url, data, config);\n  }\n\n  put(url, data) {\n    let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    return this.instance.put(url, data, config);\n  }\n\n  delete(url, data) {\n    let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    return this.instance.delete(url, {\n      data,\n      ...config\n    });\n  }\n\n}\n\nconst http = new Http();\nexport default http;","map":{"version":3,"sources":["F:/ReactJS/React-Project/shopee/src/utils/http.js"],"names":["axios","toast","LocalStorage","Http","constructor","instance","create","baseURL","process","env","REACT_APP_API","timeout","headers","interceptors","response","use","result","data","status","error","position","autoClose","Promise","reject","request","config","accessToken","localStorage","getItem","authorization","get","url","post","put","delete","http"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;AAEA,MAAMC,IAAN,CAAW;AACTC,EAAAA,WAAW,GAAG;AACZ,SAAKC,QAAL,GAAgBL,KAAK,CAACM,MAAN,CAAa;AAC3BC,MAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,aADM;AAE3BC,MAAAA,OAAO,EAAE,KAFkB;AAG3BC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAHkB,KAAb,CAAhB;AAQA,SAAKP,QAAL,CAAcQ,YAAd,CAA2BC,QAA3B,CAAoCC,GAApC,CACED,QAAQ,IAAI;AACV,YAAME,MAAM,GAAG,EAAE,GAAGF,QAAQ,CAACG,IAAd;AAAoBC,QAAAA,MAAM,EAAEJ,QAAQ,CAACI;AAArC,OAAf;AACA,aAAOF,MAAP;AACD,KAJH,EAKE,QAAkB;AAAA,UAAjB;AAAEF,QAAAA;AAAF,OAAiB;AAChBb,MAAAA,KAAK,CAACkB,KAAN,CAAY,qBAAZ,EAAmC;AACjCC,QAAAA,QAAQ,EAAE,YADuB;AAEjCC,QAAAA,SAAS,EAAE;AAFsB,OAAnC;AAIA,YAAML,MAAM,GAAG,EAAE,GAAGF,QAAQ,CAACG,IAAd;AAAoBC,QAAAA,MAAM,EAAEJ,QAAQ,CAACI;AAArC,OAAf;AACA,aAAOI,OAAO,CAACC,MAAR,CAAeP,MAAf,CAAP;AACD,KAZH;AAeA,SAAKX,QAAL,CAAcQ,YAAd,CAA2BW,OAA3B,CAAmCT,GAAnC,CACEU,MAAM,IAAI;AACR,YAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB1B,YAAY,CAACwB,WAAlC,CAApB;;AACA,UAAIA,WAAJ,EAAiB;AACfD,QAAAA,MAAM,CAACb,OAAP,CAAeiB,aAAf,GAA+BH,WAA/B;AACD;;AACD,aAAOD,MAAP;AACD,KAPH,EAQEN,KAAK,IAAI;AACP,aAAOG,OAAO,CAACC,MAAR,CAAeJ,KAAK,CAACL,QAArB,CAAP;AACD,KAVH;AAYD;;AAEDgB,EAAAA,GAAG,CAACC,GAAD,EAAqB;AAAA,QAAfN,MAAe,uEAAN,IAAM;AACtB,WAAO,KAAKpB,QAAL,CAAcyB,GAAd,CAAkBC,GAAlB,EAAuBN,MAAvB,CAAP;AACD;;AACDO,EAAAA,IAAI,CAACD,GAAD,EAAMd,IAAN,EAA2B;AAAA,QAAfQ,MAAe,uEAAN,IAAM;AAC7B,WAAO,KAAKpB,QAAL,CAAc2B,IAAd,CAAmBD,GAAnB,EAAwBd,IAAxB,EAA8BQ,MAA9B,CAAP;AACD;;AACDQ,EAAAA,GAAG,CAACF,GAAD,EAAMd,IAAN,EAA2B;AAAA,QAAfQ,MAAe,uEAAN,IAAM;AAC5B,WAAO,KAAKpB,QAAL,CAAc4B,GAAd,CAAkBF,GAAlB,EAAuBd,IAAvB,EAA6BQ,MAA7B,CAAP;AACD;;AACDS,EAAAA,MAAM,CAACH,GAAD,EAAMd,IAAN,EAA2B;AAAA,QAAfQ,MAAe,uEAAN,IAAM;AAC/B,WAAO,KAAKpB,QAAL,CAAc6B,MAAd,CAAqBH,GAArB,EAA0B;AAC/Bd,MAAAA,IAD+B;AAE/B,SAAGQ;AAF4B,KAA1B,CAAP;AAID;;AArDQ;;AAwDX,MAAMU,IAAI,GAAG,IAAIhC,IAAJ,EAAb;AACA,eAAegC,IAAf","sourcesContent":["import axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport LocalStorage from 'src/constants/localStorage'\r\n\r\nclass Http {\r\n  constructor() {\r\n    this.instance = axios.create({\r\n      baseURL: process.env.REACT_APP_API,\r\n      timeout: 10000,\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n\r\n    this.instance.interceptors.response.use(\r\n      response => {\r\n        const result = { ...response.data, status: response.status }\r\n        return result\r\n      },\r\n      ({ response }) => {\r\n        toast.error('Bạn chưa đăng nhập!', {\r\n          position: 'top-center',\r\n          autoClose: 3000\r\n        })\r\n        const result = { ...response.data, status: response.status }\r\n        return Promise.reject(result)\r\n      }\r\n    )\r\n\r\n    this.instance.interceptors.request.use(\r\n      config => {\r\n        const accessToken = localStorage.getItem(LocalStorage.accessToken)\r\n        if (accessToken) {\r\n          config.headers.authorization = accessToken\r\n        }\r\n        return config\r\n      },\r\n      error => {\r\n        return Promise.reject(error.response)\r\n      }\r\n    )\r\n  }\r\n\r\n  get(url, config = null) {\r\n    return this.instance.get(url, config)\r\n  }\r\n  post(url, data, config = null) {\r\n    return this.instance.post(url, data, config)\r\n  }\r\n  put(url, data, config = null) {\r\n    return this.instance.put(url, data, config)\r\n  }\r\n  delete(url, data, config = null) {\r\n    return this.instance.delete(url, {\r\n      data,\r\n      ...config\r\n    })\r\n  }\r\n}\r\n\r\nconst http = new Http()\r\nexport default http\r\n"]},"metadata":{},"sourceType":"module"}